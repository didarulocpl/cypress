class AddNewIssue{
    MenuButton = 'li>a[href="https://uat-crm.oss.net.bd/issue/lists"]'
    NewButton='a[href="https://uat-crm.oss.net.bd/issue/create-new-issue"]'
    IssueType='div>input[value="Bug"]'
    ProjectCodeID='span[id="select2-project_id-container"]'
    ProjectCodeSearch='span>span>input[class="select2-search__field"]'
    Milestone='select[name="milestone_id"]'
    Task='select[name="task_id"]'
    Title='input[name="issue_title"]'
    ServerEnvironment='div>input[name="server"][value="UAT"]'
    AffectedUserGroup='div>input[name="user_type"][value="Desk/Office User"]'
    Description='p[class="ck-placeholder"]'
    Severity='select[id="severity"]'
    Priority ='div>input[name="impact"][value="High"]'
    Reproducibility='select[id="reproducibility"]'
    Steps='input[name="reproduction_steps"]'
    Team='div>div[id="team_data_div"]'
    TypeTeam='span>span>input[class="select2-search__field"]'
    Assignee='div>div[id="assign_to_div"]'
    TypeAssignee='span>span>input[class="select2-search__field"]'
    TargetDate='div>input[name="target_date"]'
    Notify='div[style="margin-bottom: 5px"]'
    Attachment ='label[class="col-md-3 col-xs-3 specialRadiodiv"]'
    AttachURL='input[id="URL"]'
    Relationships='div>select[id="relationships"'
    RelationToID='span[id="select2-related_to-container"]'
    TypeRelationTo='span>span>input[class="select2-search__field"]'
    SaveButton='div>button[type="submit"]'

    MenuClick(){
        cy.get(this.MenuButton).click()
    }
    CreateButtonClick(){
        cy.get(this.NewButton).click()
    }
    SetIssueType(){
        cy.get(this.IssueType).click()
    }
    SelectProjectCode(ProjectCode){
        cy.get(this.ProjectCodeID).click()
        cy.get(this.ProjectCodeSearch).type(`${ProjectCode}{enter}`)
    }
    SelectMilestone(MilestoneID){
        cy.get(this.Milestone).select(MilestoneID)
    }
    SelectTask(TaskID){
        cy.get(this.Task).select(TaskID)
    }
    WriteTitle(title){
        cy.get(this.Title).type(title)
    }
    SetServerEnvironment(){
        cy.get(this.ServerEnvironment).click()
    }
    SetAffectedUserGroup(){
        cy.get(this.AffectedUserGroup).click()
    }
    InputDescription(DescriptionText){
        cy.get(this.Description).type(DescriptionText)
    }
    SelectSeverity(severity){
        cy.get(this.Severity).select(severity)
    }
    SetPriority(){
        cy.get(this.Priority).click()
    } 
    SelectReproducibility(reproducibility){
        cy.get(this.Reproducibility).select(reproducibility)
    }
    InputSteps(steps){
        cy.get(this.Steps).type(steps)
    }
    SelectTeam(teamname){
        cy.get(this.Team).click()
        cy.get(this.TypeTeam).type(`${teamname}{enter}`)
    }
    SelectAssignee(assignee){
        cy.get(this.Assignee).click()
        cy.get(this.TypeAssignee).type(`${assignee}{enter}`)
    }
    InputTargetDate(date){
        cy.get(this.TargetDate).clear()
        cy.get(this.TargetDate).invoke('val',`${date}`).trigger('change').blur()
    }
    CheckNotifi(){
        cy.get(this.Notify).contains('Email').click()
    }
    ClickAttachment(){
        cy.get(this.Attachment).contains('URL').click()
    }
    InputURL(url){
        cy.get(this.AttachURL).type(url)
    }
    SelectRelationships(relationid){
        cy.get(this.Relationships).select(relationid)
    }
    SelectRelationTo(relationto){
        cy.get(this.RelationToID).click()
        cy.get(this.TypeRelationTo).type(`${relationto}{enter}`)
    }
    SaveIssue(){
        cy.get(this.SaveButton).click()
    }
}

module.exports=new AddNewIssue();
